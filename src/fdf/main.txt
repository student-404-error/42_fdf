/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   main.c                                             :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: seong-ki <seong-ki@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/07/04 23:09:16 by seong-ki          #+#    #+#             */
/*   Updated: 2024/07/04 23:10:29 by seong-ki         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <mlx.h>
#include <unistd.h>
#include <stdlib.h>
#include "libft.h"
#include "fdf.h"

typedef struct	s_data {
	void	*img;
	char	*addr;
	int		bits_per_pixel;
	int		line_length;
	int		endian;
}				t_data;

typedef struct	s_point {
	int		x;
	int		y;
}				t_point;

typedef struct	s_vars {
	void	*win;
	void	*mlx;
}				t_vars;

int	press_esc_key(int keycode, t_vars *vars)
{
	if (keycode == 53)
	{
		mlx_destroy_window(vars->mlx, vars->win);
		exit(0);
	}
	return (0);
}
int	exit_hook()
{
	exit(EXIT_SUCCESS);
}

void	bresenham_line(t_point p1, t_point p2, t_data *img)
{
	int	p;
	int	dx;
	int	dy;

	dx = p2.x - p1.x;
	dy = p2.y - p1.y;
	p = 2 * dy - dx;
	while (p1.x <= p2.x || p1.y <= p2.y)
	{
		p1.x++;
		if (p < 0)
		{
			p += 2 * dy;
		}
		else {
			p += 2 * dy - 2 * dx;
			p1.y++;
		}
		my_mlx_pixel_put(img, p1.x, p1.y, 0x0000FF00);
	}
}
int	main(int ac, char **av)
{
	//open_file(ac, av);

	t_data	img;
	t_vars	vars;
	t_point	p1;
	t_point	p2;
	// int	img_height = 500;
	// int	img_width = 500;
	// int	color;
	(void) ac;
	(void) av;

	vars.mlx = mlx_init();
	vars.win = mlx_new_window(vars.mlx, 500, 500, "Hello world!");
	img.img = mlx_new_image(vars.mlx, 500, 500);// 이미지 instance 생성
	img.addr = mlx_get_data_addr(img.img, &img.bits_per_pixel, &img.line_length, &img.endian);
	// for (int i = 0; i < img_height - 1; ++i)
	// {
	// 	for (int j = 0; j < img_width - 1; ++j)
	// 	{
	// 		double r = (double)(img_width - j) / (img_width - 1);
	// 		double b = (double)(i) / (img_height - 1);
	// 		double g = 1;
	// 		color = ((int)(255.999 * r) << 16) + ((int)(255.999 * g) << 8) + ((int)(255.999 * b));
	// 		my_mlx_pixel_put(&img, i, j, color);
	// 		my_mlx_pixel_put(&img, i + j, j, 0xFFFFFFFF);
	// 	}
	// // }
	// for (int i = 200; i < 230; i++)
	// 	my_mlx_pixel_put(&img, i, 300, 0x00FF0000);
	// my_mlx_pixel_put(&img, 250, 250, 0x0000FF00);
	p1.x = 100;
	p1.y = 200;
	p2.x = 150;
	p2.y = 400;
	bresenham_line(p1, p2, &img);
	mlx_put_image_to_window(vars.mlx, vars.win, img.img, 0, 0);//이미지를 윈도우에 올린다.

	mlx_key_hook(vars.win, press_esc_key, &vars);
	mlx_hook(vars.win, 17, 0, exit_hook, 0);
	mlx_loop(vars.mlx);
}
